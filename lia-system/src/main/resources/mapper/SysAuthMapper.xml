<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lia.system.modules.auth.SysAuthMapper">

    <resultMap type="SysAuth" id="SysAuthResult">
        <id     property="authId"      column="auth_id"      />
        <id     property="routerId"      column="router_id"      />
        <result property="creater"    column="creater"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <resultMap type="SysDictData" id="SysDictDataResult">
        <id     property="dataId"      column="data_id"      />
        <id     property="typeId"      column="type_id"      />
        <result property="creater"    column="creater"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <select id="findSysAuth" parameterType="SysAuth" resultMap="SysAuthResult">
        select * from sys_auth
        <where>
            <if test="authId != null">
                AND auth_id = #{authId}
            </if>
            <if test="name != null">
                AND name like concat('%',#{name},'%')
            </if>
            <if test="url != null">
                AND url like concat('%',#{url},'%')
            </if>
            <if test="key != null">
                AND `key` like concat('%',#{key},'%')
            </if>
            <if test="routerId != null">
                AND router_id = #{routerId}
            </if>
            <if test="type != null">
                AND `type` = #{type}
            </if>
            <if test="creater != null">
                AND creater = #{creater}
            </if>
            <if test="createTime != null">
                AND create_time between substring_index(#{createTime},',',1) and substring_index(#{createTime},',',-1)
            </if>
            <if test="remark != null">
                AND remark like concat('%',#{remark},'%')
            </if>
        </where>
        order by auth_id desc
    </select>


    <insert id="addSysAuth" parameterType="SysAuth">
        insert  into sys_auth
        (`name`,url,`key`,router_id,`type`,creater,remark)
        values
        <trim prefix="(" suffix=")" suffixOverrides="," >
            #{name},
            #{url},
            #{key},
            #{routerId},
            #{type},
            #{creater},
            #{remark},
        </trim>
    </insert>


    <update id="editSysAuth" parameterType="SysAuth">
        update sys_auth set
        `name` = #{name},
        url = #{url},
        `key` = #{key},
        router_id = #{routerId},
        `type` = #{type},
        remark = #{remark}
        where auth_id = #{authId}
    </update>

    <delete id="deleteSysAuths" parameterType="List">
        delete from sys_auth where auth_id in
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="authIds" index="index" item="item">
                #{item},
            </foreach>
        </trim>
    </delete>


    <select id="findSysAuthByRoleId" parameterType="Integer" resultMap="SysAuthResult">
        select * from sys_auth
        <where>
            auth_id in (
                select auth_id from sys_role_auth where role_id = #{roleId}
            )
        </where>
    </select>

    <select id="findIdsbyRoleId" parameterType="Integer" resultType="Integer">
        select auth_id from sys_role_auth
        where role_id = #{roleId}
    </select>


    <select id="getSysAuthDict" resultType="SysDictData">
        select name as label,auth_id as value,router_id as remark from sys_auth
    </select>


    <update id="moveToRouter">
        update sys_auth set router_id = #{routerId} where auth_id in
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="authIds" index="index" item="item">
                #{item},
            </foreach>
        </trim>
    </update>

    <select id="hasAuth" resultType="Integer">
        select auth_id from sys_role_auth
        where auth_id = (select auth_id from sys_auth where `key` = #{key})
        and role_id = (select role_id from sys_user where user_id = #{userId})
    </select>


</mapper>