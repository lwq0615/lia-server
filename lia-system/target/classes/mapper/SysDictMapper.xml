<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lia.system.modules.dict.SysDictMapper">


    <resultMap type="SysDict" id="SysDictResult">
        <id     property="dictId"      column="dict_id"      />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <select id="typeNameMap" resultType="SysDict">
        select DISTINCT name as label, type as value from sys_dict ORDER BY dict_id asc
    </select>

    <select id="getSysDict" resultMap="SysDictResult">
        select * from sys_dict
        <where>
            <if test="dictId != null">
                AND dict_id = #{dictId}
            </if>
            <if test="value != null">
                AND `value` = #{value}
            </if>
            <if test="label != null">
                AND label = #{label}
            </if>
            <if test="type != null">
                AND type = #{type}
            </if>
            <if test="name != null">
                AND name = #{name}
            </if>
            <if test="createBy != null">
                AND create_by = #{createBy}
            </if>
            <if test="createTime != null">
                AND create_time between substring_index(#{createTime},',',1) and substring_index(#{createTime},',',-1)
            </if>
            <if test="remark != null">
                AND remark like concat('%',#{remark},'%')
            </if>
        </where>
    </select>


    <insert id="addSysDict" parameterType="SysDict">
        insert  into sys_dict (
            `value`,
            label,
            `type`,
            name,
            create_by,
            create_time,
            remark
        )
        values (
            #{value},
            #{label},
            #{type},
            #{name},
            #{createBy},
            current_timestamp(),
            #{remark}
        )
    </insert>


    <update id="editSysDict" parameterType="SysDict">
        update sys_dict set
        `value` = #{value},
        label = #{label},
        type = #{type},
        name = #{name},
        create_by = #{createBy},
        create_time = #{createTime},
        remark = #{remark}
        where dict_id = #{dictId}
    </update>


    <update id="updateDictType">
        update sys_dict set
        type = #{type},
        name = #{name}
        where type = #{oldType}
    </update>

    <delete id="deleteDicts" parameterType="List">
        delete from sys_dict where dict_id in
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="dictIds" index="index" item="item">
                #{item},
            </foreach>
        </trim>
    </delete>


    <delete id="deleteDictsByType" parameterType="String">
        delete from sys_dict where type = #{type}
    </delete>

    <select id="getSysRoleDict" resultMap="SysDictResult">
        SELECT role_id as value, name as label from sys_role
    </select>

    <select id="getSysUserDict" resultMap="SysDictResult">
        select nick as label,user_id as value from sys_user where del_flag = '0'
    </select>


    <select id="getSysAuthDict" resultType="SysDict">
        select name as label,auth_id as value,router_id as remark from sys_auth
    </select>

</mapper>