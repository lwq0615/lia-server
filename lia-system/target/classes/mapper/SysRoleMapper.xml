<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lia.system.modules.role.SysRoleMapper">

    <resultMap type="SysRole" id="SysRoleResult">
        <id     property="roleId"      column="role_id"      />
        <id     property="companyId"      column="company_id"      />
        <result property="rootRouterId"    column="root_router_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <collection property="auths" javaType="ArrayList" ofType="Integer"
                    select="com.lia.system.modules.auth.SysAuthMapper.findIdsbyRoleId"
                    column="role_id">
        </collection>
        <collection property="routers" javaType="ArrayList" ofType="Integer"
                    select="com.lia.system.modules.router.SysRouterMapper.findIdsbyRoleId"
                    column="role_id">
        </collection>
    </resultMap>

    <resultMap type="SysDict" id="SysDictResult">
        <id     property="dictId"      column="dict_id"      />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <select id="findSysRole" parameterType="SysRole" resultMap="SysRoleResult">
        select * from sys_role
        <where>
            <if test="roleId != null">
                AND role_id = #{roleId}
            </if>
            <if test="name != null">
                AND `name` = #{name}
            </if>
            <if test="key != null">
                AND `key` = #{key}
            </if>
            <if test="companyId != null">
                AND `company_id` = #{companyId}
            </if>
            <if test="superior != null">
                AND `superior` = #{superior}
            </if>
            <if test="rootRouterId != null">
                AND root_router_id = #{rootRouterId}
            </if>
            <if test="createBy != null">
                AND create_by = #{createBy}
            </if>
            <if test="createTime != null">
                AND create_time between substring_index(#{createTime},',',1) and substring_index(#{createTime},',',-1)
            </if>
            <if test="remark != null">
                AND remark like concat('%',#{remark},'%')
            </if>
        </where>
    </select>


    <insert id="addSysRole" parameterType="SysRole" useGeneratedKeys="true" keyProperty ="roleId" keyColumn="role_id">
        insert  into sys_role
        (`name`,`key`,company_id,superior,root_router_id,create_by,create_time,remark)
        values (
            #{name},
            #{key},
            #{companyId},
            #{superior},
            #{rootRouterId},
            #{createBy},
            current_timestamp(),
            #{remark}
        )
    </insert>


    <update id="editSysRole" parameterType="SysRole">
        update sys_role set
        `name` = #{name},
        `key` = #{key},
        `company_id` = #{companyId},
        `superior` = #{superior},
        root_router_id = #{rootRouterId},
        remark = #{remark}
        where role_id = #{roleId}
    </update>

    <delete id="deleteRoles" parameterType="List">
        delete from sys_role where role_id in
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="roleIds" index="index" item="item">
                #{item},
            </foreach>
        </trim>
    </delete>


    <delete id="deleteAuthsOfRole" parameterType="Integer">
        delete from sys_role_auth
        where role_id = #{roleId}
    </delete>

    <insert id="addAuthsToRole">
        insert into sys_role_auth (role_id,auth_id) values
        <trim suffixOverrides=",">
        <foreach collection="authIds" index="index" item="item">
            (#{roleId},#{item}),
        </foreach>
    </trim>
    </insert>


    <delete id="deleteRoutersOfRole" parameterType="Integer">
        delete from sys_role_router
        where role_id = #{roleId}
    </delete>

    <insert id="addRoutersToRole">
        insert into sys_role_router (role_id,router_id) values
        <trim suffixOverrides=",">
            <foreach collection="routerIds" index="index" item="item">
                (#{roleId},#{item}),
            </foreach>
        </trim>
    </insert>

    <select id="getRoleOfCompanyDict" resultType="SysDict">
        SELECT role_id as value, name as label from sys_role where company_id = #{companyId}
    </select>

    <select id="getSysRoleDict" resultMap="SysDictResult">
        SELECT role_id as value, r.name as label, c.name as remark from sys_role r, sys_company c where r.company_id = c.company_id
    </select>

</mapper>